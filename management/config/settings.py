"""
Django settings for management project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
import decouple
import django_heroku
from dj_database_url import parse as dburl
from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = decouple.config('SECRET_KEY')
# SECRET_KEY = environ.Env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = decouple.config('DEBUG', default=False, cast=bool)


ALLOWED_HOSTS = decouple.config('ALLOWED_HOSTS', cast=decouple.Csv())


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'apps.clients',
    'apps.home',
    'apps.users',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

INTERNAL_IPS = ['127.0.0.1']

ROOT_URLCONF = 'management.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # My contexts (Core)
                'apps.core.context_processors.users_count',
            ],
        },
    },
]

WSGI_APPLICATION = 'management.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

#########################################################
# DATABASE - USING DATABASE_URL (PRODUCTION AND HEROKU)
#########################################################

def default_database():
    from pathlib import Path

    try:
        decouple.config('DATABASE_URL')
    except decouple.UndefinedValueError:
        # Creating path for database SQLite3
        Path(os.path.join(BASE_DIR, 'database')).mkdir(parents=True, exist_ok=True)

    return f"sqlite:///{os.path.join(BASE_DIR, 'database/database.sqlite3')}"


DATABASES = {
    'default': decouple.config('DATABASE_URL', default=default_database(), cast=dburl)
}


######################################################
# DATABASE - GITHUB ACTIONS
######################################################

if os.environ.get('GITHUB_WORKFLOW'):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': decouple.config('DB_NAME'),
            'USER': decouple.config('DB_USER'),
            'PASSWORD': decouple.config('DB_PASSWORD'),
            'HOST': decouple.config('DB_HOST'),
            'PORT': decouple.config('DB_PORT'),
        }
    }

# Password validation.
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# Default: /static/
STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Root statifiles with command: ./manage.py collectstatic. # Default: staticfiles
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Add other folder static files
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # Default: static
    os.path.join(BASE_DIR, 'media'),  # Default: media
]

STATICFILES_FINDERS_IGNORE = [
    '*.scss',
]

# Repository upoload medias: images, videos, audio. etc.
# NOTA
# Você pode mudar e deixar apenas "PHOTO_ENABLE = True", porem, se enviar o projeto
# para um servidor web, terá que configurar para reconhecer a pasta de MEDIA_ROOT.
# O Heroku não resolve arquivos de midias, terá que usar um Amazon S3 por exemplo.
# Por outro lado, você consegue usar midias em modo de DEBUG = True.
# Veja mais detalhes em:
# https://stackoverflow.com/questions/41474150/using-heroku-for-django-media-files
# https://devcenter.heroku.com/articles/s3
# Default: /media/
MEDIA_URL = '/media/'

# Default: media
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

PHOTO_ENABLE = True if DEBUG else False

# Login/Logout redirect
LOGIN_REDIRECT_URL = 'home_page'
LOGOUT_REDIRECT_URL = 'home_page'


# Expirar sessão de login ao fechar brower
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# Expira em 10 minutos
# SESSION_COOKIE_AGE = 10 * 60

# Heroku settings
django_heroku.settings(locals())
